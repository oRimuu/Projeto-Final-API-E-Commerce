package org.serratec.TrabalhoFinal.config;

import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;

@Configuration
public class SwaggerConfig {

    @Value("${dominio.openapi.dev-url}")
    private String devUrl;

  

    @Bean
    public OpenAPI myOpenAPI() {
        Server devServer = new Server();
        devServer.setUrl(devUrl);
        devServer.setDescription("URL do servidor de desenvolvimento");

        
        Contact contact = new Contact();
        contact.setEmail("APIprojetofinal@gmail.com");
        contact.setName("ProjetoAPIgrupo6");
        

        License mitLicense = new License()
                .name("Apache License 2.0")
                .url("https://www.apache.org/licenses/LICENSE-2.0");

        Info info = new Info()
                .title("ecommerce")
                .version("1.7")
                .contact(contact)
                .description("O projeto Serratec API foi desenvolvido com o objetivo de proporcionar uma plataforma moderna, estruturada e escal√°vel para o gerenciamento de dados e processos internos do programa Serratec - Parque Tecnol√≥gico da Regi√£o Serrana. Essa API tem como principal finalidade integrar e automatizar opera√ß√µes que envolvem alunos, instrutores, cursos, avalia√ß√µes e empresas parceiras, garantindo um fluxo de informa√ß√µes eficiente e seguro.\r\n"
                		+ "\r\n"
                		+ "A aplica√ß√£o foi constru√≠da utilizando o framework Spring Boot, que oferece uma base s√≥lida para o desenvolvimento de aplica√ß√µes RESTful em Java, permitindo alta performance e f√°cil manuten√ß√£o. O projeto segue o padr√£o MVC (Model-View-Controller) e utiliza Spring Data JPA para integra√ß√£o com o banco de dados relacional, proporcionando persist√™ncia de dados de forma simples e padronizada.\r\n"
                		+ "\r\n"
                		+ "Entre as principais funcionalidades da API, destacam-se:\r\n"
                		+ "\r\n"
                		+ "üìò Cadastro e gerenciamento de alunos: inclus√£o, atualiza√ß√£o, exclus√£o e listagem de estudantes matriculados nos cursos do Serratec.\r\n"
                		+ "\r\n"
                		+ "üë®‚Äçüè´ Gest√£o de instrutores e cursos: controle das turmas, disciplinas ministradas e acompanhamento do progresso dos alunos.\r\n"
                		+ "\r\n"
                		+ "üßÆ M√≥dulo de avalia√ß√µes: registro de notas, feedbacks e m√©dias de desempenho.\r\n"
                		+ "\r\n"
                		+ "üè¢ Empresas parceiras: integra√ß√£o de empresas interessadas em contratar alunos formados ou em est√°gio.\r\n"
                		+ "\r\n"
                		+ "üîê Autentica√ß√£o e seguran√ßa: endpoints protegidos por JWT (JSON Web Token), garantindo acesso apenas a usu√°rios autenticados.\r\n"
                		+ "\r\n"
                		+ "üß† Documenta√ß√£o interativa: gerada automaticamente com o Swagger/OpenAPI, facilitando o consumo dos endpoints por desenvolvedores e testadores.\r\n"
                		+ "\r\n"
                		+ "\r\n"
                		+ "A arquitetura foi planejada para ser modular e expans√≠vel, permitindo que novos m√≥dulos sejam adicionados sem comprometer o funcionamento dos j√° existentes. O projeto tamb√©m prioriza boas pr√°ticas de programa√ß√£o, como inje√ß√£o de depend√™ncias, tratamento de exce√ß√µes centralizado e uso de DTOs (Data Transfer Objects) para melhor controle das informa√ß√µes trafegadas pela API.\r\n"
                		+ "\r\n"
                		+ "Al√©m disso, o projeto busca refletir valores essenciais do Serratec, como inova√ß√£o, colabora√ß√£o e aprendizado cont√≠nuo, servindo como exemplo de aplica√ß√£o pr√°tica dos conhecimentos adquiridos durante o curso t√©cnico.\r\n"
                		+ "\r\n"
                		+ "O desenvolvimento foi realizado em equipe, seguindo o fluxo de versionamento do Git/GitHub, com branches organizadas e revis√µes de c√≥digo. Isso garante qualidade, rastreabilidade e um ambiente colaborativo de desenvolvimento.\r\n"
                		+ "\r\n"
                		+ "\r\n"
                		+ "---\r\n"
                		+ "\r\n"
                		+ "üí° Tecnologias utilizadas:\r\n"
                		+ "\r\n"
                		+ "Java 17\r\n"
                		+ "\r\n"
                		+ "Spring Boot\r\n"
                		+ "\r\n"
                		+ "Spring Data JPA\r\n"
                		+ "\r\n"
                		+ "Hibernate\r\n"
                		+ "\r\n"
                		+ "Maven\r\n"
                		+ "\r\n"
                		+ "PostgreSQL\r\n"
                		+ "\r\n"
                		+ "Swagger / OpenAPI\r\n"
                		+ "\r\n"
                		+ "JWT Security\r\n"
                		+ "\r\n"
                		+ "Lombok")
                .termsOfService("https://www.meudominio.com.br/termos")
                .license(mitLicense);

        return new OpenAPI()
                .info(info)
                .servers(List.of(devServer ));
    }
}